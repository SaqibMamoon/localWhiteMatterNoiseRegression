#!/usr/bin/python3

import os
import json

###################### Define the Paths and parameters ########################

# Set paths and create some folders
flywheel_base ='/flywheel/v0/'
first_output_dir = '/firstOutput'
os.system('mkdir %s'%first_output_dir)
final_output_dir = os.path.join(flywheel_base, 'output')
manifest_file = os.path.join(flywheel_base, 'manifest.json')
config_path = os.path.join(flywheel_base, 'config.json')
denoiser = '/tmp/denoiser-master/run_denoise.py'

# Unzip the structural zip
fmriprepOutputArchive_folder = os.path.join(flywheel_base, 'input/fmriprepOutputArchive')
fmriprepOutputArchive = os.path.join(fmriprepOutputArchive_folder, os.listdir(fmriprepOutputArchive_folder)[0]) 
unzipped_folder = '/tmp/prep'
os.system('mkdir %s' % unzipped_folder)
os.system('unzip -q %s -d %s' % (fmriprepOutputArchive, unzipped_folder))
mainprep_folder = os.path.join(os.listdir(uzipped_folder)[0], 'fmriprep')

###################Parse Config Here##########################################

with open(config_path) as config_file:
    job_config = json.load(config_file)
config = job_config['config']

regressWhiteMAtter = config['regressWhiteMAtter']
highPassFilter = config['highPassFilter']
lowPassFilter = config['lowPassFilter']

############################# Process images ##################################

# Loop through subjects
for subject in os.listdir(mainprep_folder):
    if 'sub' in subject and 'html' not in subject:
        print('Subject: %s' % subject)
        subject_path = os.path.join(mainprep_folder, subject)
        new_subject_path = os.path.join(first_output_dir, subject)
        os.system('mkdir %s' % new_subject_path)
        # Loop through each session in each subject
        for session in os.listdir(subject_path):
            if 'ses' in session:
                print('    Session: %s' % session)
                session_path = os.path.join(subject_path, session)
                new_session_path = os.path.join(new_subject_path, session)
                os.sytem('mkdir %s' % new_session_path)
                # Loop through each image in each session of each subject
                for image in os.listdir(os.path.join(session_path, 'func')):
                    if 'desc-preproc_bold.nii.gz' in image and 'MNI152NLin2009cAsym' not in image and 'MNI152NLin6Asym' not in image:
                        print('        Image: %s' % image)
                        image_name = os.path.join(session_path, image)
                        confound_path = image.replace('desc-preproc_bold.nii.gz', 'desc-confounds_regressors.tsv')
                        new_image_folder = os.path.join(new_session_path, image)
                        os.system('mkdir %s' % new_image_folder)
                        call = 'python3 %s --hp_filter %s --lp_filter %s %s %s %s' % (denoiser, highPassFilter, 
                                                                                      lowPassFilter, image_name, 
                                                                                      confound_path, new_image_folder)
                        os.system(call)
                
os.system('cd %s; zip -q -r %s *' % (first_output_dir, final_output_dir)